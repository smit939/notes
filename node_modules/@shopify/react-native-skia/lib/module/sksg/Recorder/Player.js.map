{"version":3,"names":["drawCircle","drawImage","drawOval","drawPath","drawPoints","drawRect","drawRRect","drawLine","drawAtlas","drawParagraph","drawImageSVG","drawPicture","drawGlyphs","drawTextBlob","drawTextPath","drawText","drawDiffRect","drawVertices","drawPatch","drawSkottie","drawBox","isBoxCommand","composeColorFilters","isPushColorFilter","pushColorFilter","saveCTM","setBlurMaskFilter","isPushImageFilter","pushImageFilter","composeImageFilters","setPaintProperties","composePathEffects","isPushPathEffect","pushPathEffect","isPushShader","pushShader","CommandType","isCommand","isDrawCommand","isGroup","materializeCommand","play","ctx","_command","children","forEach","child","command","SaveBackdropFilter","saveBackdropFilter","SaveLayer","materializePaint","paint","paintDeclarations","pop","canvas","saveLayer","SavePaint","props","paints","push","savePaint","Skia","standalone","RestorePaint","restorePaint","ComposeColorFilter","RestorePaintDeclaration","Error","MaterializePaint","ComposePathEffect","ComposeImageFilter","PushBlurMaskFilter","SaveCTM","RestoreCTM","restore","copy","setAlphaf","getAlphaf","getOpacity","p","DrawPaint","drawPaint","DrawImage","DrawCircle","DrawPoints","DrawPath","DrawRect","DrawRRect","DrawOval","DrawLine","DrawPatch","DrawVertices","DrawDiffRect","DrawText","DrawTextPath","DrawTextBlob","DrawGlyphs","DrawPicture","DrawImageSVG","DrawParagraph","DrawAtlas","DrawSkottie","console","warn","type","replay","commands"],"sources":["Player.ts"],"sourcesContent":["import {\n  drawCircle,\n  drawImage,\n  drawOval,\n  drawPath,\n  drawPoints,\n  drawRect,\n  drawRRect,\n  drawLine,\n  drawAtlas,\n  drawParagraph,\n  drawImageSVG,\n  drawPicture,\n  drawGlyphs,\n  drawTextBlob,\n  drawTextPath,\n  drawText,\n  drawDiffRect,\n  drawVertices,\n  drawPatch,\n  drawSkottie,\n} from \"./commands/Drawing\";\nimport { drawBox, isBoxCommand } from \"./commands/Box\";\nimport {\n  composeColorFilters,\n  isPushColorFilter,\n  pushColorFilter,\n} from \"./commands/ColorFilters\";\nimport { saveCTM } from \"./commands/CTM\";\nimport {\n  setBlurMaskFilter,\n  isPushImageFilter,\n  pushImageFilter,\n  composeImageFilters,\n} from \"./commands/ImageFilters\";\nimport { setPaintProperties } from \"./commands/Paint\";\nimport {\n  composePathEffects,\n  isPushPathEffect,\n  pushPathEffect,\n} from \"./commands/PathEffects\";\nimport { isPushShader, pushShader } from \"./commands/Shaders\";\nimport {\n  CommandType,\n  isCommand,\n  isDrawCommand,\n  isGroup,\n  materializeCommand,\n} from \"./Core\";\nimport type { Command } from \"./Core\";\nimport type { DrawingContext } from \"./DrawingContext\";\n\nfunction play(ctx: DrawingContext, _command: Command) {\n  \"worklet\";\n  if (isGroup(_command)) {\n    _command.children.forEach((child) => play(ctx, child));\n    return;\n  }\n  const command = materializeCommand(_command);\n  if (isCommand(command, CommandType.SaveBackdropFilter)) {\n    ctx.saveBackdropFilter();\n  } else if (isCommand(command, CommandType.SaveLayer)) {\n    ctx.materializePaint();\n    const paint = ctx.paintDeclarations.pop();\n    ctx.canvas.saveLayer(paint);\n  } else if (isDrawCommand(command, CommandType.SavePaint)) {\n    if (command.props.paint) {\n      ctx.paints.push(command.props.paint);\n    } else {\n      ctx.savePaint();\n      setPaintProperties(\n        ctx.Skia,\n        ctx,\n        command.props,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (command as any).standalone\n      );\n    }\n  } else if (isCommand(command, CommandType.RestorePaint)) {\n    ctx.restorePaint();\n  } else if (isCommand(command, CommandType.ComposeColorFilter)) {\n    composeColorFilters(ctx);\n  } else if (isCommand(command, CommandType.RestorePaintDeclaration)) {\n    ctx.materializePaint();\n    const paint = ctx.restorePaint();\n    if (!paint) {\n      throw new Error(\"No paint declaration to push\");\n    }\n    ctx.paintDeclarations.push(paint);\n  } else if (isCommand(command, CommandType.MaterializePaint)) {\n    ctx.materializePaint();\n  } else if (isPushColorFilter(command)) {\n    pushColorFilter(ctx, command);\n  } else if (isPushShader(command)) {\n    pushShader(ctx, command);\n  } else if (isPushImageFilter(command)) {\n    pushImageFilter(ctx, command);\n  } else if (isPushPathEffect(command)) {\n    pushPathEffect(ctx, command);\n  } else if (isCommand(command, CommandType.ComposePathEffect)) {\n    composePathEffects(ctx);\n  } else if (isCommand(command, CommandType.ComposeImageFilter)) {\n    composeImageFilters(ctx);\n  } else if (isDrawCommand(command, CommandType.PushBlurMaskFilter)) {\n    setBlurMaskFilter(ctx, command.props);\n  } else if (isDrawCommand(command, CommandType.SaveCTM)) {\n    saveCTM(ctx, command.props);\n  } else if (isCommand(command, CommandType.RestoreCTM)) {\n    ctx.canvas.restore();\n  } else {\n    // TODO: is a copy needed here?\n    // apply opacity to the current paint.\n    const paint = ctx.paint.copy();\n    paint.setAlphaf(paint.getAlphaf() * ctx.getOpacity());\n    const paints = [paint, ...ctx.paintDeclarations];\n    ctx.paintDeclarations = [];\n    paints.forEach((p) => {\n      ctx.paints.push(p);\n      if (isBoxCommand(command)) {\n        drawBox(ctx, command);\n      } else if (isCommand(command, CommandType.DrawPaint)) {\n        ctx.canvas.drawPaint(ctx.paint);\n      } else if (isDrawCommand(command, CommandType.DrawImage)) {\n        drawImage(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawCircle)) {\n        drawCircle(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawPoints)) {\n        drawPoints(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawPath)) {\n        drawPath(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawRect)) {\n        drawRect(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawRRect)) {\n        drawRRect(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawOval)) {\n        drawOval(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawLine)) {\n        drawLine(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawPatch)) {\n        drawPatch(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawVertices)) {\n        drawVertices(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawDiffRect)) {\n        drawDiffRect(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawText)) {\n        drawText(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawTextPath)) {\n        drawTextPath(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawTextBlob)) {\n        drawTextBlob(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawGlyphs)) {\n        drawGlyphs(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawPicture)) {\n        drawPicture(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawImageSVG)) {\n        drawImageSVG(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawParagraph)) {\n        drawParagraph(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawAtlas)) {\n        drawAtlas(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawSkottie)) {\n        drawSkottie(ctx, command.props);\n      } else {\n        console.warn(`Unknown command: ${command.type}`);\n      }\n      ctx.paints.pop();\n    });\n  }\n}\n\nexport const replay = (ctx: DrawingContext, commands: Command[]) => {\n  \"worklet\";\n  commands.forEach((command) => {\n    play(ctx, command);\n  });\n};\n"],"mappings":"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","ignoreList":[]}