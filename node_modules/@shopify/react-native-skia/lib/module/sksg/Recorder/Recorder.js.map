{"version":3,"names":["NodeType","isSharedValue","isColorFilter","isImageFilter","isPathEffect","isShader","CommandType","Recorder","constructor","_defineProperty","Set","cursors","push","commands","getRecording","paintPool","animationValues","processProps","props","animatedProps","hasAnimatedProps","key","prop","add","undefined","command","length","saveGroup","children","type","Group","restoreGroup","pop","savePaint","standalone","SavePaint","restorePaint","RestorePaint","restorePaintDeclaration","RestorePaintDeclaration","materializePaint","MaterializePaint","pushPathEffect","pathEffectType","Error","PushPathEffect","pushImageFilter","imageFilterType","PushImageFilter","pushColorFilter","colorFilterType","PushColorFilter","pushShader","shaderType","Blend","PushShader","pushBlurMaskFilter","PushBlurMaskFilter","composePathEffect","ComposePathEffect","composeColorFilter","ComposeColorFilter","composeImageFilter","ComposeImageFilter","saveCTM","SaveCTM","restoreCTM","RestoreCTM","drawPaint","DrawPaint","saveLayer","SaveLayer","saveBackdropFilter","SaveBackdropFilter","drawBox","boxProps","shadows","forEach","shadow","DrawBox","drawImage","DrawImage","drawCircle","DrawCircle","drawPoints","DrawPoints","drawPath","DrawPath","drawRect","DrawRect","drawRRect","DrawRRect","drawOval","DrawOval","drawLine","DrawLine","drawPatch","DrawPatch","drawVertices","DrawVertices","drawDiffRect","DrawDiffRect","drawText","DrawText","drawTextPath","DrawTextPath","drawTextBlob","DrawTextBlob","drawGlyphs","DrawGlyphs","drawPicture","DrawPicture","drawImageSVG","DrawImageSVG","drawParagraph","DrawParagraph","drawAtlas","DrawAtlas","drawSkottie","DrawSkottie"],"sources":["Recorder.ts"],"sourcesContent":["import type { SharedValue } from \"react-native-reanimated\";\n\nimport { NodeType } from \"../../dom/types\";\nimport type {\n  BlurMaskFilterProps,\n  CircleProps,\n  CTMProps,\n  ImageProps,\n  PaintProps,\n  PointsProps,\n  PathProps,\n  RectProps,\n  RoundedRectProps,\n  OvalProps,\n  LineProps,\n  PatchProps,\n  VerticesProps,\n  DiffRectProps,\n  TextProps,\n  TextPathProps,\n  TextBlobProps,\n  GlyphsProps,\n  PictureProps,\n  ImageSVGProps,\n  ParagraphProps,\n  AtlasProps,\n  BoxProps,\n  BoxShadowProps,\n  SkottieProps,\n} from \"../../dom/types\";\nimport type { AnimatedProps } from \"../../renderer\";\nimport { isSharedValue } from \"../utils\";\nimport { isColorFilter, isImageFilter, isPathEffect, isShader } from \"../Node\";\nimport type { SkPaint, BaseRecorder } from \"../../skia/types\";\n\nimport { CommandType } from \"./Core\";\nimport type { Command } from \"./Core\";\n\nexport interface Recording {\n  commands: Command[];\n  paintPool: SkPaint[];\n}\n\ninterface AnimationValues {\n  animationValues: Set<SharedValue<unknown>>;\n}\n\nexport class Recorder implements BaseRecorder {\n  commands: Command[] = [];\n  cursors: Command[][] = [];\n  animationValues: Set<SharedValue<unknown>> = new Set();\n\n  constructor() {\n    this.cursors.push(this.commands);\n  }\n\n  getRecording(): Recording & AnimationValues {\n    return {\n      commands: this.commands,\n      paintPool: [],\n      animationValues: this.animationValues,\n    };\n  }\n\n  private processProps(props: Record<string, unknown>) {\n    const animatedProps: Record<string, SharedValue<unknown>> = {};\n    let hasAnimatedProps = false;\n\n    for (const key in props) {\n      const prop = props[key];\n      if (isSharedValue(prop)) {\n        this.animationValues.add(prop);\n        animatedProps[key] = prop;\n        hasAnimatedProps = true;\n      }\n    }\n\n    return {\n      props,\n      animatedProps: hasAnimatedProps ? animatedProps : undefined,\n    };\n  }\n\n  private add(command: Command) {\n    if (command.props) {\n      const { animatedProps } = this.processProps(\n        command.props as Record<string, unknown>\n      );\n      if (animatedProps) {\n        command.animatedProps = animatedProps;\n      }\n    }\n    this.cursors[this.cursors.length - 1].push(command);\n  }\n\n  saveGroup() {\n    const children: Command[] = [];\n    this.add({ type: CommandType.Group, children });\n    this.cursors.push(children);\n  }\n\n  restoreGroup() {\n    this.cursors.pop();\n  }\n\n  savePaint(props: AnimatedProps<PaintProps>, standalone: boolean) {\n    this.add({ type: CommandType.SavePaint, props, standalone });\n  }\n\n  restorePaint() {\n    this.add({ type: CommandType.RestorePaint });\n  }\n\n  restorePaintDeclaration() {\n    this.add({ type: CommandType.RestorePaintDeclaration });\n  }\n\n  materializePaint() {\n    this.add({ type: CommandType.MaterializePaint });\n  }\n\n  pushPathEffect(pathEffectType: NodeType, props: AnimatedProps<unknown>) {\n    if (!isPathEffect(pathEffectType)) {\n      throw new Error(\"Invalid color filter type: \" + pathEffectType);\n    }\n    this.add({\n      type: CommandType.PushPathEffect,\n      pathEffectType,\n      props,\n    });\n  }\n\n  pushImageFilter(imageFilterType: NodeType, props: AnimatedProps<unknown>) {\n    if (!isImageFilter(imageFilterType)) {\n      throw new Error(\"Invalid color filter type: \" + imageFilterType);\n    }\n    this.add({\n      type: CommandType.PushImageFilter,\n      imageFilterType,\n      props,\n    });\n  }\n\n  pushColorFilter(colorFilterType: NodeType, props: AnimatedProps<unknown>) {\n    if (!isColorFilter(colorFilterType)) {\n      throw new Error(\"Invalid color filter type: \" + colorFilterType);\n    }\n    this.add({\n      type: CommandType.PushColorFilter,\n      colorFilterType,\n      props,\n    });\n  }\n\n  pushShader(shaderType: NodeType, props: AnimatedProps<unknown>) {\n    if (!isShader(shaderType) && !(shaderType === NodeType.Blend)) {\n      throw new Error(\"Invalid color filter type: \" + shaderType);\n    }\n    this.add({ type: CommandType.PushShader, shaderType, props });\n  }\n\n  pushBlurMaskFilter(props: AnimatedProps<BlurMaskFilterProps>) {\n    this.add({ type: CommandType.PushBlurMaskFilter, props });\n  }\n\n  composePathEffect() {\n    this.add({ type: CommandType.ComposePathEffect });\n  }\n\n  composeColorFilter() {\n    this.add({ type: CommandType.ComposeColorFilter });\n  }\n\n  composeImageFilter() {\n    this.add({ type: CommandType.ComposeImageFilter });\n  }\n\n  saveCTM(props: AnimatedProps<CTMProps>) {\n    this.add({ type: CommandType.SaveCTM, props });\n  }\n\n  restoreCTM() {\n    this.add({ type: CommandType.RestoreCTM });\n  }\n\n  drawPaint() {\n    this.add({ type: CommandType.DrawPaint });\n  }\n\n  saveLayer() {\n    this.add({ type: CommandType.SaveLayer });\n  }\n\n  saveBackdropFilter() {\n    this.add({ type: CommandType.SaveBackdropFilter });\n  }\n\n  drawBox(\n    boxProps: AnimatedProps<BoxProps>,\n    shadows: {\n      props: BoxShadowProps;\n      animatedProps?: Record<string, SharedValue<unknown>>;\n    }[]\n  ) {\n    shadows.forEach((shadow) => {\n      if (shadow.props) {\n        if (shadow.props) {\n          const { animatedProps } = this.processProps(\n            shadow.props as unknown as Record<string, unknown>\n          );\n          if (animatedProps) {\n            shadow.animatedProps = animatedProps;\n          }\n        }\n      }\n    });\n    this.add({ type: CommandType.DrawBox, props: boxProps, shadows });\n  }\n\n  drawImage(props: AnimatedProps<ImageProps>) {\n    this.add({ type: CommandType.DrawImage, props });\n  }\n\n  drawCircle(props: AnimatedProps<CircleProps>) {\n    this.add({ type: CommandType.DrawCircle, props });\n  }\n  drawPoints(props: AnimatedProps<PointsProps>) {\n    this.add({ type: CommandType.DrawPoints, props });\n  }\n\n  drawPath(props: AnimatedProps<PathProps>) {\n    this.add({ type: CommandType.DrawPath, props });\n  }\n\n  drawRect(props: AnimatedProps<RectProps>) {\n    this.add({ type: CommandType.DrawRect, props });\n  }\n\n  drawRRect(props: AnimatedProps<RoundedRectProps>) {\n    this.add({ type: CommandType.DrawRRect, props });\n  }\n\n  drawOval(props: AnimatedProps<OvalProps>) {\n    this.add({ type: CommandType.DrawOval, props });\n  }\n\n  drawLine(props: AnimatedProps<LineProps>) {\n    this.add({ type: CommandType.DrawLine, props });\n  }\n\n  drawPatch(props: AnimatedProps<PatchProps>) {\n    this.add({ type: CommandType.DrawPatch, props });\n  }\n\n  drawVertices(props: AnimatedProps<VerticesProps>) {\n    this.add({ type: CommandType.DrawVertices, props });\n  }\n\n  drawDiffRect(props: AnimatedProps<DiffRectProps>) {\n    this.add({ type: CommandType.DrawDiffRect, props });\n  }\n\n  drawText(props: AnimatedProps<TextProps>) {\n    this.add({ type: CommandType.DrawText, props });\n  }\n\n  drawTextPath(props: AnimatedProps<TextPathProps>) {\n    this.add({ type: CommandType.DrawTextPath, props });\n  }\n\n  drawTextBlob(props: AnimatedProps<TextBlobProps>) {\n    this.add({ type: CommandType.DrawTextBlob, props });\n  }\n\n  drawGlyphs(props: AnimatedProps<GlyphsProps>) {\n    this.add({ type: CommandType.DrawGlyphs, props });\n  }\n\n  drawPicture(props: AnimatedProps<PictureProps>) {\n    this.add({ type: CommandType.DrawPicture, props });\n  }\n\n  drawImageSVG(props: AnimatedProps<ImageSVGProps>) {\n    this.add({ type: CommandType.DrawImageSVG, props });\n  }\n\n  drawParagraph(props: AnimatedProps<ParagraphProps>) {\n    this.add({ type: CommandType.DrawParagraph, props });\n  }\n\n  drawAtlas(props: AnimatedProps<AtlasProps>) {\n    this.add({ type: CommandType.DrawAtlas, props });\n  }\n\n  drawSkottie(props: AnimatedProps<SkottieProps>) {\n    this.add({ type: CommandType.DrawSkottie, props });\n  }\n}\n"],"mappings":"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","ignoreList":[]}