{"version":3,"names":["enumKey","processColor","BlendMode","PaintStyle","StrokeCap","StrokeJoin","setPaintProperties","Skia","ctx","opacity","color","blendMode","strokeWidth","style","strokeJoin","strokeCap","strokeMiter","antiAlias","dither","standalone","paint","undefined","setAlphaf","getAlphaf","setOpacity","getOpacity","setShader","setColor","setBlendMode","setStrokeWidth","setStyle","setStrokeJoin","setStrokeCap","setStrokeMiter","setAntiAlias","setDither"],"sources":["Paint.ts"],"sourcesContent":["import { enumKey, processColor } from \"../../../dom/nodes\";\nimport type { PaintProps } from \"../../../dom/types\";\nimport {\n  BlendMode,\n  PaintStyle,\n  StrokeCap,\n  StrokeJoin,\n} from \"../../../skia/types\";\nimport type { Skia } from \"../../../skia/types\";\nimport type { DrawingContext } from \"../DrawingContext\";\n\nexport const setPaintProperties = (\n  Skia: Skia,\n  ctx: DrawingContext,\n  {\n    opacity,\n    color,\n    blendMode,\n    strokeWidth,\n    style,\n    strokeJoin,\n    strokeCap,\n    strokeMiter,\n    antiAlias,\n    dither,\n  }: PaintProps,\n  standalone: boolean\n) => {\n  \"worklet\";\n  const { paint } = ctx;\n\n  if (opacity !== undefined) {\n    if (standalone) {\n      paint.setAlphaf(paint.getAlphaf() * opacity);\n    } else {\n      ctx.setOpacity(ctx.getOpacity() * opacity);\n    }\n  }\n  if (color !== undefined) {\n    paint.setShader(null);\n    paint.setColor(processColor(Skia, color));\n  }\n  if (blendMode !== undefined) {\n    paint.setBlendMode(BlendMode[enumKey(blendMode)]);\n  }\n  if (strokeWidth !== undefined) {\n    paint.setStrokeWidth(strokeWidth);\n  }\n  if (style !== undefined) {\n    paint.setStyle(PaintStyle[enumKey(style)]);\n  }\n  if (strokeJoin !== undefined) {\n    paint.setStrokeJoin(StrokeJoin[enumKey(strokeJoin)]);\n  }\n  if (strokeCap !== undefined) {\n    paint.setStrokeCap(StrokeCap[enumKey(strokeCap)]);\n  }\n  if (strokeMiter !== undefined) {\n    paint.setStrokeMiter(strokeMiter);\n  }\n  if (antiAlias !== undefined) {\n    paint.setAntiAlias(antiAlias);\n  }\n  if (dither !== undefined) {\n    paint.setDither(dither);\n  }\n};\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,YAAY,QAAQ,oBAAoB;AAE1D,SACEC,SAAS,EACTC,UAAU,EACVC,SAAS,EACTC,UAAU,QACL,qBAAqB;AAI5B,OAAO,MAAMC,kBAAkB,GAAGA,CAChCC,IAAU,EACVC,GAAmB,EACnB;EACEC,OAAO;EACPC,KAAK;EACLC,SAAS;EACTC,WAAW;EACXC,KAAK;EACLC,UAAU;EACVC,SAAS;EACTC,WAAW;EACXC,SAAS;EACTC;AACU,CAAC,EACbC,UAAmB,KAChB;EACH,SAAS;;EACT,MAAM;IAAEC;EAAM,CAAC,GAAGZ,GAAG;EAErB,IAAIC,OAAO,KAAKY,SAAS,EAAE;IACzB,IAAIF,UAAU,EAAE;MACdC,KAAK,CAACE,SAAS,CAACF,KAAK,CAACG,SAAS,CAAC,CAAC,GAAGd,OAAO,CAAC;IAC9C,CAAC,MAAM;MACLD,GAAG,CAACgB,UAAU,CAAChB,GAAG,CAACiB,UAAU,CAAC,CAAC,GAAGhB,OAAO,CAAC;IAC5C;EACF;EACA,IAAIC,KAAK,KAAKW,SAAS,EAAE;IACvBD,KAAK,CAACM,SAAS,CAAC,IAAI,CAAC;IACrBN,KAAK,CAACO,QAAQ,CAAC1B,YAAY,CAACM,IAAI,EAAEG,KAAK,CAAC,CAAC;EAC3C;EACA,IAAIC,SAAS,KAAKU,SAAS,EAAE;IAC3BD,KAAK,CAACQ,YAAY,CAAC1B,SAAS,CAACF,OAAO,CAACW,SAAS,CAAC,CAAC,CAAC;EACnD;EACA,IAAIC,WAAW,KAAKS,SAAS,EAAE;IAC7BD,KAAK,CAACS,cAAc,CAACjB,WAAW,CAAC;EACnC;EACA,IAAIC,KAAK,KAAKQ,SAAS,EAAE;IACvBD,KAAK,CAACU,QAAQ,CAAC3B,UAAU,CAACH,OAAO,CAACa,KAAK,CAAC,CAAC,CAAC;EAC5C;EACA,IAAIC,UAAU,KAAKO,SAAS,EAAE;IAC5BD,KAAK,CAACW,aAAa,CAAC1B,UAAU,CAACL,OAAO,CAACc,UAAU,CAAC,CAAC,CAAC;EACtD;EACA,IAAIC,SAAS,KAAKM,SAAS,EAAE;IAC3BD,KAAK,CAACY,YAAY,CAAC5B,SAAS,CAACJ,OAAO,CAACe,SAAS,CAAC,CAAC,CAAC;EACnD;EACA,IAAIC,WAAW,KAAKK,SAAS,EAAE;IAC7BD,KAAK,CAACa,cAAc,CAACjB,WAAW,CAAC;EACnC;EACA,IAAIC,SAAS,KAAKI,SAAS,EAAE;IAC3BD,KAAK,CAACc,YAAY,CAACjB,SAAS,CAAC;EAC/B;EACA,IAAIC,MAAM,KAAKG,SAAS,EAAE;IACxBD,KAAK,CAACe,SAAS,CAACjB,MAAM,CAAC;EACzB;AACF,CAAC","ignoreList":[]}