{"version":3,"names":["_types","require","_utils","_Node","_Core","_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","Recorder","constructor","Set","cursors","push","commands","getRecording","paintPool","animationValues","processProps","props","animatedProps","hasAnimatedProps","key","prop","isSharedValue","add","undefined","command","length","saveGroup","children","type","CommandType","Group","restoreGroup","pop","savePaint","standalone","SavePaint","restorePaint","RestorePaint","restorePaintDeclaration","RestorePaintDeclaration","materializePaint","MaterializePaint","pushPathEffect","pathEffectType","isPathEffect","Error","PushPathEffect","pushImageFilter","imageFilterType","isImageFilter","PushImageFilter","pushColorFilter","colorFilterType","isColorFilter","PushColorFilter","pushShader","shaderType","isShader","NodeType","Blend","PushShader","pushBlurMaskFilter","PushBlurMaskFilter","composePathEffect","ComposePathEffect","composeColorFilter","ComposeColorFilter","composeImageFilter","ComposeImageFilter","saveCTM","SaveCTM","restoreCTM","RestoreCTM","drawPaint","DrawPaint","saveLayer","SaveLayer","saveBackdropFilter","SaveBackdropFilter","drawBox","boxProps","shadows","forEach","shadow","DrawBox","drawImage","DrawImage","drawCircle","DrawCircle","drawPoints","DrawPoints","drawPath","DrawPath","drawRect","DrawRect","drawRRect","DrawRRect","drawOval","DrawOval","drawLine","DrawLine","drawPatch","DrawPatch","drawVertices","DrawVertices","drawDiffRect","DrawDiffRect","drawText","DrawText","drawTextPath","DrawTextPath","drawTextBlob","DrawTextBlob","drawGlyphs","DrawGlyphs","drawPicture","DrawPicture","drawImageSVG","DrawImageSVG","drawParagraph","DrawParagraph","drawAtlas","DrawAtlas","drawSkottie","DrawSkottie","exports"],"sources":["Recorder.ts"],"sourcesContent":["import type { SharedValue } from \"react-native-reanimated\";\n\nimport { NodeType } from \"../../dom/types\";\nimport type {\n  BlurMaskFilterProps,\n  CircleProps,\n  CTMProps,\n  ImageProps,\n  PaintProps,\n  PointsProps,\n  PathProps,\n  RectProps,\n  RoundedRectProps,\n  OvalProps,\n  LineProps,\n  PatchProps,\n  VerticesProps,\n  DiffRectProps,\n  TextProps,\n  TextPathProps,\n  TextBlobProps,\n  GlyphsProps,\n  PictureProps,\n  ImageSVGProps,\n  ParagraphProps,\n  AtlasProps,\n  BoxProps,\n  BoxShadowProps,\n  SkottieProps,\n} from \"../../dom/types\";\nimport type { AnimatedProps } from \"../../renderer\";\nimport { isSharedValue } from \"../utils\";\nimport { isColorFilter, isImageFilter, isPathEffect, isShader } from \"../Node\";\nimport type { SkPaint, BaseRecorder } from \"../../skia/types\";\n\nimport { CommandType } from \"./Core\";\nimport type { Command } from \"./Core\";\n\nexport interface Recording {\n  commands: Command[];\n  paintPool: SkPaint[];\n}\n\ninterface AnimationValues {\n  animationValues: Set<SharedValue<unknown>>;\n}\n\nexport class Recorder implements BaseRecorder {\n  commands: Command[] = [];\n  cursors: Command[][] = [];\n  animationValues: Set<SharedValue<unknown>> = new Set();\n\n  constructor() {\n    this.cursors.push(this.commands);\n  }\n\n  getRecording(): Recording & AnimationValues {\n    return {\n      commands: this.commands,\n      paintPool: [],\n      animationValues: this.animationValues,\n    };\n  }\n\n  private processProps(props: Record<string, unknown>) {\n    const animatedProps: Record<string, SharedValue<unknown>> = {};\n    let hasAnimatedProps = false;\n\n    for (const key in props) {\n      const prop = props[key];\n      if (isSharedValue(prop)) {\n        this.animationValues.add(prop);\n        animatedProps[key] = prop;\n        hasAnimatedProps = true;\n      }\n    }\n\n    return {\n      props,\n      animatedProps: hasAnimatedProps ? animatedProps : undefined,\n    };\n  }\n\n  private add(command: Command) {\n    if (command.props) {\n      const { animatedProps } = this.processProps(\n        command.props as Record<string, unknown>\n      );\n      if (animatedProps) {\n        command.animatedProps = animatedProps;\n      }\n    }\n    this.cursors[this.cursors.length - 1].push(command);\n  }\n\n  saveGroup() {\n    const children: Command[] = [];\n    this.add({ type: CommandType.Group, children });\n    this.cursors.push(children);\n  }\n\n  restoreGroup() {\n    this.cursors.pop();\n  }\n\n  savePaint(props: AnimatedProps<PaintProps>, standalone: boolean) {\n    this.add({ type: CommandType.SavePaint, props, standalone });\n  }\n\n  restorePaint() {\n    this.add({ type: CommandType.RestorePaint });\n  }\n\n  restorePaintDeclaration() {\n    this.add({ type: CommandType.RestorePaintDeclaration });\n  }\n\n  materializePaint() {\n    this.add({ type: CommandType.MaterializePaint });\n  }\n\n  pushPathEffect(pathEffectType: NodeType, props: AnimatedProps<unknown>) {\n    if (!isPathEffect(pathEffectType)) {\n      throw new Error(\"Invalid color filter type: \" + pathEffectType);\n    }\n    this.add({\n      type: CommandType.PushPathEffect,\n      pathEffectType,\n      props,\n    });\n  }\n\n  pushImageFilter(imageFilterType: NodeType, props: AnimatedProps<unknown>) {\n    if (!isImageFilter(imageFilterType)) {\n      throw new Error(\"Invalid color filter type: \" + imageFilterType);\n    }\n    this.add({\n      type: CommandType.PushImageFilter,\n      imageFilterType,\n      props,\n    });\n  }\n\n  pushColorFilter(colorFilterType: NodeType, props: AnimatedProps<unknown>) {\n    if (!isColorFilter(colorFilterType)) {\n      throw new Error(\"Invalid color filter type: \" + colorFilterType);\n    }\n    this.add({\n      type: CommandType.PushColorFilter,\n      colorFilterType,\n      props,\n    });\n  }\n\n  pushShader(shaderType: NodeType, props: AnimatedProps<unknown>) {\n    if (!isShader(shaderType) && !(shaderType === NodeType.Blend)) {\n      throw new Error(\"Invalid color filter type: \" + shaderType);\n    }\n    this.add({ type: CommandType.PushShader, shaderType, props });\n  }\n\n  pushBlurMaskFilter(props: AnimatedProps<BlurMaskFilterProps>) {\n    this.add({ type: CommandType.PushBlurMaskFilter, props });\n  }\n\n  composePathEffect() {\n    this.add({ type: CommandType.ComposePathEffect });\n  }\n\n  composeColorFilter() {\n    this.add({ type: CommandType.ComposeColorFilter });\n  }\n\n  composeImageFilter() {\n    this.add({ type: CommandType.ComposeImageFilter });\n  }\n\n  saveCTM(props: AnimatedProps<CTMProps>) {\n    this.add({ type: CommandType.SaveCTM, props });\n  }\n\n  restoreCTM() {\n    this.add({ type: CommandType.RestoreCTM });\n  }\n\n  drawPaint() {\n    this.add({ type: CommandType.DrawPaint });\n  }\n\n  saveLayer() {\n    this.add({ type: CommandType.SaveLayer });\n  }\n\n  saveBackdropFilter() {\n    this.add({ type: CommandType.SaveBackdropFilter });\n  }\n\n  drawBox(\n    boxProps: AnimatedProps<BoxProps>,\n    shadows: {\n      props: BoxShadowProps;\n      animatedProps?: Record<string, SharedValue<unknown>>;\n    }[]\n  ) {\n    shadows.forEach((shadow) => {\n      if (shadow.props) {\n        if (shadow.props) {\n          const { animatedProps } = this.processProps(\n            shadow.props as unknown as Record<string, unknown>\n          );\n          if (animatedProps) {\n            shadow.animatedProps = animatedProps;\n          }\n        }\n      }\n    });\n    this.add({ type: CommandType.DrawBox, props: boxProps, shadows });\n  }\n\n  drawImage(props: AnimatedProps<ImageProps>) {\n    this.add({ type: CommandType.DrawImage, props });\n  }\n\n  drawCircle(props: AnimatedProps<CircleProps>) {\n    this.add({ type: CommandType.DrawCircle, props });\n  }\n  drawPoints(props: AnimatedProps<PointsProps>) {\n    this.add({ type: CommandType.DrawPoints, props });\n  }\n\n  drawPath(props: AnimatedProps<PathProps>) {\n    this.add({ type: CommandType.DrawPath, props });\n  }\n\n  drawRect(props: AnimatedProps<RectProps>) {\n    this.add({ type: CommandType.DrawRect, props });\n  }\n\n  drawRRect(props: AnimatedProps<RoundedRectProps>) {\n    this.add({ type: CommandType.DrawRRect, props });\n  }\n\n  drawOval(props: AnimatedProps<OvalProps>) {\n    this.add({ type: CommandType.DrawOval, props });\n  }\n\n  drawLine(props: AnimatedProps<LineProps>) {\n    this.add({ type: CommandType.DrawLine, props });\n  }\n\n  drawPatch(props: AnimatedProps<PatchProps>) {\n    this.add({ type: CommandType.DrawPatch, props });\n  }\n\n  drawVertices(props: AnimatedProps<VerticesProps>) {\n    this.add({ type: CommandType.DrawVertices, props });\n  }\n\n  drawDiffRect(props: AnimatedProps<DiffRectProps>) {\n    this.add({ type: CommandType.DrawDiffRect, props });\n  }\n\n  drawText(props: AnimatedProps<TextProps>) {\n    this.add({ type: CommandType.DrawText, props });\n  }\n\n  drawTextPath(props: AnimatedProps<TextPathProps>) {\n    this.add({ type: CommandType.DrawTextPath, props });\n  }\n\n  drawTextBlob(props: AnimatedProps<TextBlobProps>) {\n    this.add({ type: CommandType.DrawTextBlob, props });\n  }\n\n  drawGlyphs(props: AnimatedProps<GlyphsProps>) {\n    this.add({ type: CommandType.DrawGlyphs, props });\n  }\n\n  drawPicture(props: AnimatedProps<PictureProps>) {\n    this.add({ type: CommandType.DrawPicture, props });\n  }\n\n  drawImageSVG(props: AnimatedProps<ImageSVGProps>) {\n    this.add({ type: CommandType.DrawImageSVG, props });\n  }\n\n  drawParagraph(props: AnimatedProps<ParagraphProps>) {\n    this.add({ type: CommandType.DrawParagraph, props });\n  }\n\n  drawAtlas(props: AnimatedProps<AtlasProps>) {\n    this.add({ type: CommandType.DrawAtlas, props });\n  }\n\n  drawSkottie(props: AnimatedProps<SkottieProps>) {\n    this.add({ type: CommandType.DrawSkottie, props });\n  }\n}\n"],"mappings":"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","ignoreList":[]}