{"version":3,"names":["_Drawing","require","_Box","_ColorFilters","_CTM","_ImageFilters","_Paint","_PathEffects","_Shaders","_Core","play","ctx","_command","isGroup","children","forEach","child","command","materializeCommand","isCommand","CommandType","SaveBackdropFilter","saveBackdropFilter","SaveLayer","materializePaint","paint","paintDeclarations","pop","canvas","saveLayer","isDrawCommand","SavePaint","props","paints","push","savePaint","setPaintProperties","Skia","standalone","RestorePaint","restorePaint","ComposeColorFilter","composeColorFilters","RestorePaintDeclaration","Error","MaterializePaint","isPushColorFilter","pushColorFilter","isPushShader","pushShader","isPushImageFilter","pushImageFilter","isPushPathEffect","pushPathEffect","ComposePathEffect","composePathEffects","ComposeImageFilter","composeImageFilters","PushBlurMaskFilter","setBlurMaskFilter","SaveCTM","saveCTM","RestoreCTM","restore","copy","setAlphaf","getAlphaf","getOpacity","p","isBoxCommand","drawBox","DrawPaint","drawPaint","DrawImage","drawImage","DrawCircle","drawCircle","DrawPoints","drawPoints","DrawPath","drawPath","DrawRect","drawRect","DrawRRect","drawRRect","DrawOval","drawOval","DrawLine","drawLine","DrawPatch","drawPatch","DrawVertices","drawVertices","DrawDiffRect","drawDiffRect","DrawText","drawText","DrawTextPath","drawTextPath","DrawTextBlob","drawTextBlob","DrawGlyphs","drawGlyphs","DrawPicture","drawPicture","DrawImageSVG","drawImageSVG","DrawParagraph","drawParagraph","DrawAtlas","drawAtlas","DrawSkottie","drawSkottie","console","warn","type","replay","commands","exports"],"sources":["Player.ts"],"sourcesContent":["import {\n  drawCircle,\n  drawImage,\n  drawOval,\n  drawPath,\n  drawPoints,\n  drawRect,\n  drawRRect,\n  drawLine,\n  drawAtlas,\n  drawParagraph,\n  drawImageSVG,\n  drawPicture,\n  drawGlyphs,\n  drawTextBlob,\n  drawTextPath,\n  drawText,\n  drawDiffRect,\n  drawVertices,\n  drawPatch,\n  drawSkottie,\n} from \"./commands/Drawing\";\nimport { drawBox, isBoxCommand } from \"./commands/Box\";\nimport {\n  composeColorFilters,\n  isPushColorFilter,\n  pushColorFilter,\n} from \"./commands/ColorFilters\";\nimport { saveCTM } from \"./commands/CTM\";\nimport {\n  setBlurMaskFilter,\n  isPushImageFilter,\n  pushImageFilter,\n  composeImageFilters,\n} from \"./commands/ImageFilters\";\nimport { setPaintProperties } from \"./commands/Paint\";\nimport {\n  composePathEffects,\n  isPushPathEffect,\n  pushPathEffect,\n} from \"./commands/PathEffects\";\nimport { isPushShader, pushShader } from \"./commands/Shaders\";\nimport {\n  CommandType,\n  isCommand,\n  isDrawCommand,\n  isGroup,\n  materializeCommand,\n} from \"./Core\";\nimport type { Command } from \"./Core\";\nimport type { DrawingContext } from \"./DrawingContext\";\n\nfunction play(ctx: DrawingContext, _command: Command) {\n  \"worklet\";\n  if (isGroup(_command)) {\n    _command.children.forEach((child) => play(ctx, child));\n    return;\n  }\n  const command = materializeCommand(_command);\n  if (isCommand(command, CommandType.SaveBackdropFilter)) {\n    ctx.saveBackdropFilter();\n  } else if (isCommand(command, CommandType.SaveLayer)) {\n    ctx.materializePaint();\n    const paint = ctx.paintDeclarations.pop();\n    ctx.canvas.saveLayer(paint);\n  } else if (isDrawCommand(command, CommandType.SavePaint)) {\n    if (command.props.paint) {\n      ctx.paints.push(command.props.paint);\n    } else {\n      ctx.savePaint();\n      setPaintProperties(\n        ctx.Skia,\n        ctx,\n        command.props,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (command as any).standalone\n      );\n    }\n  } else if (isCommand(command, CommandType.RestorePaint)) {\n    ctx.restorePaint();\n  } else if (isCommand(command, CommandType.ComposeColorFilter)) {\n    composeColorFilters(ctx);\n  } else if (isCommand(command, CommandType.RestorePaintDeclaration)) {\n    ctx.materializePaint();\n    const paint = ctx.restorePaint();\n    if (!paint) {\n      throw new Error(\"No paint declaration to push\");\n    }\n    ctx.paintDeclarations.push(paint);\n  } else if (isCommand(command, CommandType.MaterializePaint)) {\n    ctx.materializePaint();\n  } else if (isPushColorFilter(command)) {\n    pushColorFilter(ctx, command);\n  } else if (isPushShader(command)) {\n    pushShader(ctx, command);\n  } else if (isPushImageFilter(command)) {\n    pushImageFilter(ctx, command);\n  } else if (isPushPathEffect(command)) {\n    pushPathEffect(ctx, command);\n  } else if (isCommand(command, CommandType.ComposePathEffect)) {\n    composePathEffects(ctx);\n  } else if (isCommand(command, CommandType.ComposeImageFilter)) {\n    composeImageFilters(ctx);\n  } else if (isDrawCommand(command, CommandType.PushBlurMaskFilter)) {\n    setBlurMaskFilter(ctx, command.props);\n  } else if (isDrawCommand(command, CommandType.SaveCTM)) {\n    saveCTM(ctx, command.props);\n  } else if (isCommand(command, CommandType.RestoreCTM)) {\n    ctx.canvas.restore();\n  } else {\n    // TODO: is a copy needed here?\n    // apply opacity to the current paint.\n    const paint = ctx.paint.copy();\n    paint.setAlphaf(paint.getAlphaf() * ctx.getOpacity());\n    const paints = [paint, ...ctx.paintDeclarations];\n    ctx.paintDeclarations = [];\n    paints.forEach((p) => {\n      ctx.paints.push(p);\n      if (isBoxCommand(command)) {\n        drawBox(ctx, command);\n      } else if (isCommand(command, CommandType.DrawPaint)) {\n        ctx.canvas.drawPaint(ctx.paint);\n      } else if (isDrawCommand(command, CommandType.DrawImage)) {\n        drawImage(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawCircle)) {\n        drawCircle(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawPoints)) {\n        drawPoints(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawPath)) {\n        drawPath(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawRect)) {\n        drawRect(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawRRect)) {\n        drawRRect(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawOval)) {\n        drawOval(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawLine)) {\n        drawLine(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawPatch)) {\n        drawPatch(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawVertices)) {\n        drawVertices(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawDiffRect)) {\n        drawDiffRect(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawText)) {\n        drawText(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawTextPath)) {\n        drawTextPath(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawTextBlob)) {\n        drawTextBlob(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawGlyphs)) {\n        drawGlyphs(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawPicture)) {\n        drawPicture(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawImageSVG)) {\n        drawImageSVG(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawParagraph)) {\n        drawParagraph(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawAtlas)) {\n        drawAtlas(ctx, command.props);\n      } else if (isDrawCommand(command, CommandType.DrawSkottie)) {\n        drawSkottie(ctx, command.props);\n      } else {\n        console.warn(`Unknown command: ${command.type}`);\n      }\n      ctx.paints.pop();\n    });\n  }\n}\n\nexport const replay = (ctx: DrawingContext, commands: Command[]) => {\n  \"worklet\";\n  commands.forEach((command) => {\n    play(ctx, command);\n  });\n};\n"],"mappings":"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","ignoreList":[]}